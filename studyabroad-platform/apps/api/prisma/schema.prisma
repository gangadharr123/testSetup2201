datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  passwordHash String
  avatarUrl   String?
  profilePct  Int      @default(0)
  posts       Post[]
  expenses    Expense[]
  visaSteps   VisaStep[]
  notifications Notification[]
}

model Destination {
  id      Int @id @default(autoincrement())
  country String
  city    String
}

model VisaStep {
  id      Int    @id @default(autoincrement())
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
  title   String
  dueDate DateTime
  status  String
}

model Expense {
  id          Int    @id @default(autoincrement())
  user        User   @relation(fields: [userId], references: [id])
  userId      Int
  date        DateTime
  category    String
  amount      Float
  description String
}

model Post {
  id      Int    @id @default(autoincrement())
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
  title   String
  bodyMd  String
  country String
}

model Job {
  id       Int    @id @default(autoincrement())
  title    String
  company  String
  location String
  type     String
  category String
  wage     Float
}

model Application {
  id         Int   @id @default(autoincrement())
  user       User  @relation(fields: [userId], references: [id])
  userId     Int
  job        Job   @relation(fields: [jobId], references: [id])
  jobId      Int
  status     String
  appliedAt  DateTime @default(now())
}

model Notification {
  id        Int    @id @default(autoincrement())
  user      User   @relation(fields: [userId], references: [id])
  userId    Int
  type      String
  refId     Int?
  msg       String
  read      Boolean @default(false)
  createdAt DateTime @default(now())
}
